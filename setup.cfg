[metadata]
name = dissect.cobaltstrike
description = a Python library for dissecting Cobalt Strike related data
long_description = file: README.rst
long_description_content_type = text/x-rst
url = https://github.com/fox-it/dissect.cobaltstrike
author = Yun Zheng Hu
author_email = hu@fox-it.com
license = MIT
license_file = LICENSE
keywords = dissect, cobaltstrike, beacon, parser, parsing, lark, cstruct
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Information Technology
    License :: OSI Approved :: MIT License
    Operating System :: POSIX
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Security
    Topic :: Utilities
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Software Development :: Libraries :: Python Modules
project_urls =
    Source = https://github.com/fox-it/dissect.cobaltstrike
    Documentation = https://dissect-cobaltstrike.readthedocs.io/

[options]
zip_safe = false
packages = find_namespace:
namespace_packages = dissect
platforms = any
include_package_data = true
install_requires =
    dissect.cstruct >= 2.0
    lark
python_requires = >=3.7
setup_requires =
    setuptools_scm

[bdist_wheel]
universal = 0

[options.entry_points]
console_scripts =
    beacon-artifact = dissect.cobaltstrike.artifact:main
    beacon-dump = dissect.cobaltstrike.beacon:main
    beacon-xordecode = dissect.cobaltstrike.xordecode:main
    beacon-pcap = dissect.cobaltstrike.pcap:main
    beacon-client = dissect.cobaltstrike.client:main
    c2profile-dump = dissect.cobaltstrike.c2profile:main

[options.extras_require]
c2 =
    flow.record
    pycryptodome
    httpx
pcap =
    pyshark
    dissect.cobaltstrike[c2]
full =
    dissect.cobaltstrike[c2,pcap]
    rich
test =
    pytest
    pytest-cov
    pytest-httpserver
    dissect.cobaltstrike[full]
docs =
    sphinx
    sphinx_rtd_theme
    sphinx-autoapi
    sphinx-copybutton
    sphinx-argparse-cli
    ipython
    dissect.cobaltstrike[full]

[flake8]
max-line-length = 120
extend-ignore = E203
statistics = true
